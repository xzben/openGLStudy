set(third_party_folder "3rd")

if(NOT TARGET imgui)
    include(imgui.cmake)
    set_target_properties(imgui PROPERTIES FOLDER ${third_party_folder}/imgui)
endif()

if(NOT TARGET glfw)
    option(GLFW_BUILD_EXAMPLES "" OFF)
    option(GLFW_BUILD_TESTS "" OFF)
    option(GLFW_BUILD_DOCS "" OFF)
    option(GLFW_INSTALL "" OFF)

    add_subdirectory(glfw)
    set_target_properties(glfw PROPERTIES FOLDER ${third_party_folder}/glfw)
    set_target_properties(update_mappings PROPERTIES FOLDER ${third_party_folder}/glfw)
endif()

if(NOT TARGET Assimp)
	add_subdirectory(assimp)
	OPTION(BUILD_SHARED_LIBS "Build package with shared libraries." ON)
	OPTION(ASSIMP_BUILD_TESTS "" ON)
	OPTION(ASSIMP_BUILD_ASSIMP_TOOLS "" ON)
	OPTION(ASSIMP_INSTALL_PDB "" ON)
    OPTION(ASSIMP_INSTALL "" OFF)
    OPTION(ASSIMP_INJECT_DEBUG_POSTFIX "" OFF)
    OPTION(ASSIMP_BUILD_SAMPLES "" ON)
    OPTION(ASSIMP_ERROR_MAX "" ON)
    OPTION(ASSIMP_BUILD_DOCS "" ON)

    set_target_properties(assimp PROPERTIES FOLDER ${third_party_folder}/assimp)
    set_target_properties(zlibstatic PROPERTIES FOLDER ${third_party_folder}/assimp)
    set_target_properties(uninstall PROPERTIES FOLDER ${third_party_folder}/assimp)
    set_target_properties(assimp_cmd PROPERTIES FOLDER ${third_party_folder}/assimp)
    set_target_properties(unit PROPERTIES FOLDER ${third_party_folder}/assimp)
    set_target_properties(UpdateAssimpLibsDebugSymbolsAndDLLs PROPERTIES FOLDER ${third_party_folder}/assimp)
endif()

if(NOT TARGET jsoncpp)
	include(jsoncpp.cmake)
	set_target_properties(jsoncpp PROPERTIES FOLDER ${third_party_folder}/jsoncpp)
endif()

if(NOT TARGET stb)
    include(stb.cmake)
    set_target_properties(stb PROPERTIES FOLDER ${third_party_folder}/stb)
endif()

